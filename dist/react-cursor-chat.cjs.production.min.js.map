{"version":3,"file":"react-cursor-chat.cjs.production.min.js","sources":["../src/cursor/cursor.ts","../src/helper/index.ts","../src/cursor/me.ts","../src/cursor/other.ts","../src/hooks/useOnlineCursor.ts","../src/CursorIcon.tsx","../src/Latency.tsx","../src/hooks/useRenderPosition.ts","../src/OtherCursor.tsx","../src/hooks/useRenderOpacity.ts","../src/OtherCursors.tsx","../src/MeCursor.tsx","../src/CursorChat.tsx"],"sourcesContent":["import Presence from '@yomo/presencejs';\nimport { Latency, MousePosition } from '../types';\n\nexport default class Cursor {\n    public id: string;\n    public x: number;\n    public y: number;\n    public name: string;\n    public avatar: string;\n    public color: string;\n\n    constructor(\n        id: string,\n        x: number,\n        y: number,\n        name: string,\n        avatar: string,\n        color: string\n    ) {\n        this.id = id;\n        this.x = x;\n        this.y = y;\n        this.name = name;\n        this.avatar = avatar;\n        this.color = color;\n    }\n\n    move(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n\n    onMove(_mousePosition: MousePosition) {}\n\n    onGetLatency(_data: Latency) {}\n\n    subscribeLatency(yomo: Presence) {\n        return yomo.on$<Latency>('latency').subscribe(data => {\n            if (data.id !== this.id) {\n                return;\n            }\n            this.onGetLatency(data);\n        });\n    }\n}\n","export const uuidv4 = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        let r = (Math.random() * 16) | 0,\n            v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\n\nexport const getViewportSize = () => {\n    if ((window as any).getViewportSize) {\n        return (window as any).getViewportSize;\n    }\n\n    window.onresize = () => {\n        (window as any).getViewportSize = {\n            width:\n                window.innerWidth ||\n                document.documentElement.clientWidth ||\n                document.body.clientWidth,\n            height:\n                window.innerHeight ||\n                document.documentElement.clientHeight ||\n                document.body.clientHeight,\n        };\n    };\n\n    (window as any).onresize();\n\n    return (window as any).getViewportSize;\n};\n\nexport const getScale = (x: number, y: number) => {\n    const { width, height } = getViewportSize();\n    return {\n        scaleX: x / width,\n        scaleY: y / height,\n    };\n};\n\nexport const getMousePosition = (scaleX: number, scaleY: number) => {\n    const { width, height } = getViewportSize();\n    return {\n        mouseX: scaleX * width,\n        mouseY: scaleY * height,\n    };\n};\n\nexport const stringToColor = (str: string) => {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = '#';\n    for (let i = 0; i < 3; i++) {\n        let value = (hash >> (i * 8)) & 0xff;\n        color += ('00' + value.toString(16)).slice(-2);\n    }\n    return color;\n};\n","import { fromEvent, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport Presence from '@yomo/presencejs';\nimport Cursor from './cursor';\nimport { getScale } from '../helper';\nimport { CursorMessage, TextMessage, OfflineMessage } from '../types';\n\nexport default class Me extends Cursor {\n    private yomo: Presence | undefined;\n    private subscription: Subscription;\n\n    constructor({\n        id,\n        x,\n        y,\n        name = '',\n        avatar = '',\n        color = '',\n    }: {\n        id: string;\n        x: number;\n        y: number;\n        name?: string;\n        avatar?: string;\n        color: string;\n    }) {\n        super(id, x, y, name, avatar, color);\n        this.subscription = this.subscribeMousemove();\n    }\n\n    goOnline(yomo: Presence) {\n        this.yomo = yomo;\n        this.online(yomo);\n        const onlineSubscription = this.subscribeOnline(yomo);\n        const mousePositionSubscription = this.subscribeMousePosition(yomo);\n        const latencySubscription = super.subscribeLatency(yomo);\n        const visibilitySubscription = this.subscribeVisibility(yomo);\n        this.subscription.add(onlineSubscription);\n        this.subscription.add(mousePositionSubscription);\n        this.subscription.add(latencySubscription);\n        this.subscription.add(visibilitySubscription);\n    }\n\n    async goOffline() {\n        if (this.yomo) {\n            this.yomo.send<OfflineMessage>('offline', {\n                id: this.id,\n            });\n        }\n\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n\n        return await new Promise(resolve => {\n            setTimeout(resolve, 500);\n        });\n    }\n\n    sendMessage(message: string) {\n        if (this.yomo) {\n            this.yomo.send<TextMessage>('text', {\n                id: this.id,\n                message: message,\n            });\n        }\n    }\n\n    private online(yomo: Presence) {\n        yomo.send<CursorMessage>('online', {\n            id: this.id,\n            x: 0,\n            y: 0,\n            name: this.name,\n            avatar: this.avatar,\n            color: this.color,\n        });\n    }\n\n    private subscribeOnline(yomo: Presence) {\n        return yomo.on$('online').subscribe(() => {\n            yomo.send<CursorMessage>('sync', {\n                id: this.id,\n                x: this.x,\n                y: this.y,\n                name: this.name,\n                avatar: this.avatar,\n                color: this.color,\n            });\n        });\n    }\n\n    private subscribeMousemove() {\n        const mousemove$ = fromEvent<MouseEvent>(document, 'mousemove');\n\n        return mousemove$.subscribe(event => {\n            const { clientX, clientY } = event;\n            super.move(clientX, clientY);\n            this.onMove({ mouseX: clientX, mouseY: clientY });\n        });\n    }\n\n    private subscribeMousePosition(yomo: Presence) {\n        const mousemove$ = fromEvent<MouseEvent>(document, 'mousemove');\n\n        const movement$ = mousemove$.pipe(\n            map(event => {\n                const { scaleX, scaleY } = getScale(\n                    event.clientX,\n                    event.clientY\n                );\n                return {\n                    id: this.id,\n                    x: scaleX,\n                    y: scaleY,\n                };\n            })\n        );\n\n        return movement$.subscribe(data => {\n            yomo.send('movement', data);\n        });\n    }\n\n    private subscribeVisibility(yomo: Presence) {\n        const visibilityChange$ = fromEvent<MouseEvent>(\n            document,\n            'visibilitychange'\n        );\n\n        return visibilityChange$\n            .pipe(\n                map(() => {\n                    let event: 'leave' | 'enter';\n                    if (document.hidden) event = 'leave';\n                    else event = 'enter';\n                    return {\n                        event,\n                    };\n                })\n            )\n            .subscribe(({ event }) => {\n                yomo.send(event, { id: this.id });\n            });\n    }\n}\n","import { Subscription } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport Presence from '@yomo/presencejs';\nimport Cursor from './cursor';\nimport { getMousePosition } from '../helper';\nimport { MovementMessage, TextMessage } from '../types';\n\nexport default class Other extends Cursor {\n    private subscription: Subscription | undefined;\n\n    constructor({\n        id,\n        x,\n        y,\n        name = '',\n        avatar = '',\n        color = '',\n    }: {\n        id: string;\n        x: number;\n        y: number;\n        name?: string;\n        avatar?: string;\n        color: string;\n    }) {\n        super(id, x, y, name, avatar, color);\n    }\n\n    goOnline(yomo: Presence) {\n        this.subscription = this.subscribeMovement(yomo);\n        const textMessageSubscription = this.subscribeTextMessage(yomo);\n        const latencySubscription = super.subscribeLatency(yomo);\n        const leaveSubscription = this.subscribeLeave(yomo);\n        const enterSubscription = this.subscribeEnter(yomo);\n        this.subscription.add(textMessageSubscription);\n        this.subscription.add(latencySubscription);\n        this.subscription.add(leaveSubscription);\n        this.subscription.add(enterSubscription);\n    }\n\n    unsubscribe() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    onTextMessage(_message: string) {}\n\n    private subscribeTextMessage(yomo: Presence) {\n        return yomo\n            .on$<TextMessage>('text')\n            .pipe(filter(data => data.id === this.id))\n            .subscribe(data => {\n                this.onTextMessage(data.message);\n            });\n    }\n\n    private subscribeMovement(yomo: Presence) {\n        return yomo\n            .on$<MovementMessage>('movement')\n            .pipe(\n                filter(data => data.id === this.id),\n                map(data => getMousePosition(data.x, data.y))\n            )\n            .subscribe(({ mouseX, mouseY }) => {\n                super.move(mouseX, mouseY);\n                this.onMove({ mouseX, mouseY });\n            });\n    }\n\n    private subscribeLeave(yomo: Presence) {\n        return yomo\n            .on$<MovementMessage>('leave')\n            .pipe(filter(data => data.id === this.id))\n            .subscribe(() => {\n                this.onLeave();\n            });\n    }\n\n    private subscribeEnter(yomo: Presence) {\n        return yomo\n            .on$<MovementMessage>('enter')\n            .pipe(filter(data => data.id === this.id))\n            .subscribe(() => {\n                this.onEnter();\n            });\n    }\n\n    onLeave() {\n        throw new Error('Method not implemented.');\n    }\n\n    onEnter() {\n        throw new Error('Method not implemented.');\n    }\n}\n","import { useEffect, useState } from 'react';\nimport { filter } from 'rxjs/operators';\nimport Presence from '@yomo/presencejs';\nimport Me from '../cursor/me';\nimport Other from '../cursor/other';\nimport { uuidv4 } from '../helper';\nimport { CursorMessage, OfflineMessage } from '../types';\n\nconst useOnlineCursor = ({\n    presenceURL,\n    presenceAuthEndpoint,\n    room,\n    name,\n    avatar,\n    color,\n}: {\n    presenceURL: string;\n    presenceAuthEndpoint: string;\n    room?: string;\n    name?: string;\n    avatar?: string;\n    color?: string;\n}) => {\n    const [me, setMe] = useState<Me | null>(null);\n    const [otherMap, setOtherMap] = useState<Map<string, Other>>(\n        new Map<string, Other>()\n    );\n\n    useEffect(() => {\n        const ID = uuidv4();\n\n        const me = new Me({\n            id: ID,\n            x: 0,\n            y: 0,\n            name: name || '',\n            avatar: avatar || '',\n            color: color || '',\n        });\n\n        setMe(me);\n\n        const yomo = new Presence(presenceURL, {\n            auth: {\n                type: 'token',\n                endpoint: presenceAuthEndpoint,\n            },\n        });\n\n        yomo.on('connected', () => {\n            if (room) {\n                yomo.toRoom(room);\n            }\n\n            yomo.on$<CursorMessage>('online')\n                .pipe(filter(data => data.id !== ID))\n                .subscribe(data => {\n                    setOtherMap(old => {\n                        if (old.has(data.id)) {\n                            return old;\n                        }\n                        const cursorMap = new Map(old);\n                        const other = new Other(data);\n                        other.goOnline(yomo);\n                        cursorMap.set(other.id, other);\n                        return cursorMap;\n                    });\n                });\n\n            yomo.on<OfflineMessage>('offline', data => {\n                setOtherMap(old => {\n                    const cursorMap = new Map(old);\n                    const other = cursorMap.get(data.id);\n                    if (other) {\n                        other.unsubscribe();\n                    }\n                    cursorMap.delete(data.id);\n                    return cursorMap;\n                });\n            });\n\n            // Answer server query, when other other go online, server will ask others states,\n            // this is the response\n            yomo.on$<CursorMessage>('sync')\n                .pipe(filter(data => data.id !== ID))\n                .subscribe(data => {\n                    setOtherMap(old => {\n                        if (old.has(data.id)) {\n                            return old;\n                        }\n                        const cursorMap = new Map(old);\n                        const other = new Other(data);\n                        other.goOnline(yomo);\n                        cursorMap.set(other.id, other);\n                        return cursorMap;\n                    });\n                });\n\n            me.goOnline(yomo);\n        });\n\n        // yomo.on('closed', () => {});\n\n        const cleanup = async () => {\n            await me.goOffline();\n            yomo.close();\n        };\n\n        window.addEventListener('unload', cleanup);\n\n        return () => {\n            cleanup();\n            window.removeEventListener('unload', cleanup);\n        };\n    }, [room]);\n\n    const others: Other[] = [];\n\n    otherMap.forEach(value => {\n        others.push(value);\n    });\n\n    return { me, others };\n};\n\nexport default useOnlineCursor;\n","import React, { useMemo } from 'react';\n\nfunction CursorIcon({ color }: { color: string }) {\n    return useMemo(\n        () => (\n            <svg\n                width=\"20\"\n                height=\"20\"\n                viewBox=\"0 0 20 20\"\n                fill={color}\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M0 0L20 7.14286L11.0948 11.1194L7.14286 20L0 0Z\"\n                />\n            </svg>\n        ),\n        [color]\n    );\n}\n\nexport default CursorIcon;\n","import React, { useState, useEffect } from 'react';\nimport Me from './cursor/me';\nimport Other from './cursor/other';\n\nconst Latency = ({\n    cursor,\n    showLatency,\n}: {\n    cursor: Me | Other;\n    showLatency: boolean;\n}) => {\n    const [latencyData, setLatencyData] = useState({\n        meshId: '',\n        latency: 0,\n    });\n\n    useEffect(() => {\n        if (showLatency) {\n            cursor.onGetLatency = data => {\n                setLatencyData({\n                    meshId: data.meshId,\n                    latency: data.latency,\n                });\n            };\n        } else {\n            cursor.onGetLatency = _ => {};\n            setLatencyData({\n                meshId: '',\n                latency: 0,\n            });\n        }\n    }, [showLatency]);\n\n    if (latencyData.latency === 0) {\n        return null;\n    }\n\n    return (\n        <div className=\"online-cursor-wrapper__latency-box\">\n            &nbsp;\n            <svg\n                width=\"8\"\n                height=\"10\"\n                viewBox=\"0 0 8 10\"\n                fill=\"white\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M3.99993 0C4.99609 0 5.99332 0.367541 6.77237 1.10262C8.41307 2.65187 8.37032 5.28494 6.87655 6.95267L6.72235 7.11615L4.43096 9.41998C4.31176 9.53999 4.15531 9.6 3.99886 9.6C3.87371 9.6 3.74855 9.5616 3.64246 9.48479L3.56677 9.41998L1.27751 7.11508C-0.365737 5.46061 -0.467907 2.70352 1.22855 1.10262C2.00654 0.367541 3.00377 0 3.99993 0ZM3.99993 1C3.22932 1 2.48657 1.28975 1.91488 1.82992C0.711907 2.96512 0.701036 4.96169 1.84937 6.26336L1.98702 6.41038L3.999 8.436L6.01284 6.41146C7.2978 5.11772 7.33439 3.00868 6.08609 1.82996C5.51361 1.28979 4.77055 1 3.99993 1ZM4 2C5.10238 2 6 2.89762 6 4C6 5.10238 5.10238 6 4 6C2.89762 6 2 5.10238 2 4C2 2.89762 2.89762 2 4 2ZM4 3C3.4499 3 3 3.4499 3 4C3 4.5501 3.4499 5 4 5C4.5501 5 5 4.5501 5 4C5 3.4499 4.5501 3 4 3Z\"\n                    fill=\"white\"\n                />\n            </svg>\n            &nbsp;\n            <span>{latencyData.meshId}</span>&nbsp;\n            <span>{latencyData.latency}ms</span>&nbsp;\n        </div>\n    );\n};\n\nexport default Latency;\n","import { RefObject, useEffect, useRef } from 'react';\nimport Other from '../cursor/other';\nimport Me from '../cursor/me';\nimport { MousePosition } from '../types';\n\nconst useRenderPosition = (cursor: Me | Other, refContainer?: RefObject<HTMLDivElement>) => {\n    const finaliRefContainer = refContainer || useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        const renderPosition = (position: MousePosition) => {\n            if (finaliRefContainer.current) {\n                finaliRefContainer.current.style.setProperty('transform', `translate3d(${position.mouseX}px, ${position.mouseY}px, 0)`);\n            }\n        };\n\n        renderPosition({ mouseX: cursor.x, mouseY: cursor.y });\n\n        cursor.onMove = (position: MousePosition) => {\n            renderPosition(position);\n        };\n    }, [cursor]);\n\n    return finaliRefContainer;\n};\n\nexport default useRenderPosition;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport Other from './cursor/other';\nimport CursorIcon from './CursorIcon';\nimport Latency from './Latency';\nimport useRenderPosition from './hooks/useRenderPosition';\nimport useRenderOpacity from './hooks/useRenderOpacity';\n\nconst OtherCursor = ({\n    cursor,\n    showLatency,\n}: {\n    cursor: Other;\n    showLatency: boolean;\n}) => {\n    const refContainer = useRenderPosition(cursor);\n    useRenderOpacity(cursor, refContainer);\n    const [msg, setMsg] = useState('');\n\n    useEffect(() => {\n        cursor.onTextMessage = (msg: string) => {\n            setMsg(msg);\n        };\n    }, []);\n\n    return useMemo(\n        () => (\n            <div className=\"online-cursor-wrapper__cursor\" ref={refContainer}>\n                <CursorIcon color={cursor.color} />\n\n                <div\n                    className=\"online-cursor-wrapper__tail-box\"\n                    style={{\n                        borderRadius: msg ? 35 : 15,\n                        borderTopLeftRadius: msg ? 10 : 15,\n                        backgroundColor: `${cursor.color}`,\n                    }}\n                >\n                    <div className=\"online-cursor-wrapper__user\">\n                        {cursor.avatar && (\n                            <img\n                                className=\"online-cursor-wrapper__avatar\"\n                                src={cursor.avatar}\n                                alt=\"avatar\"\n                            />\n                        )}\n                        {cursor.name && (\n                            <span className=\"online-cursor-wrapper__name\">\n                                {cursor.name}\n                            </span>\n                        )}\n                        <Latency cursor={cursor} showLatency={showLatency} />\n                    </div>\n                    <div\n                        style={{\n                            height: '1px',\n                            width: '100%',\n                            visibility: 'hidden',\n                            background: 'transparent',\n                        }}\n                    ></div>\n                    {msg && (\n                        <div className=\"online-cursor-wrapper__text\">{msg}</div>\n                    )}\n                </div>\n            </div>\n        ),\n        [msg, showLatency]\n    );\n};\n\nexport default OtherCursor;\n","import { RefObject, useEffect, useRef } from 'react';\nimport Other from '../cursor/other';\n\nconst useRenderOpacity = (cursor: Other, refContainer?: RefObject<HTMLDivElement>) => {\n    const finaliRefContainer = refContainer || useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        const renderOpacity = (opacity: number) => {\n            if (finaliRefContainer.current) {\n                finaliRefContainer.current.style.setProperty('opacity', String(opacity));\n            }\n        };\n\n        cursor.onLeave = () => {renderOpacity(0.5)};\n        cursor.onEnter = () => {renderOpacity(1)};\n    }, [cursor]);\n\n    return finaliRefContainer;\n};\n\nexport default useRenderOpacity;\n","import React from 'react';\nimport Others from './cursor/other';\nimport OtherCursor from './OtherCursor';\n\nconst OthersCursors = ({\n    others,\n    showLatency = false,\n}: {\n    others: Others[];\n    showLatency?: boolean;\n}) => {\n    return (\n        <>\n            {others.map(item => (\n                <OtherCursor\n                    key={item.id}\n                    cursor={item}\n                    showLatency={showLatency}\n                />\n            ))}\n        </>\n    );\n};\n\nexport default OthersCursors;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport Me from './cursor/me';\nimport CursorIcon from './CursorIcon';\nimport Latency from './Latency';\nimport useRenderPosition from './hooks/useRenderPosition';\n\nconst MeCursor = ({\n    cursor,\n    showLatency,\n}: {\n    cursor: Me;\n    showLatency: boolean;\n}) => {\n    const refContainer = useRenderPosition(cursor);\n    const [showInput, setShowInput] = useState(false);\n    const [inputValue, setInputValue] = useState('');\n\n    const onChangeInput = useCallback(e => {\n        const inputValue = e.target.value;\n        if (inputValue === '/') {\n            return;\n        }\n        setInputValue(inputValue);\n        cursor.sendMessage(inputValue);\n    }, []);\n\n    useEffect(() => {\n        const keydown = (e: KeyboardEvent) => {\n            /*if (e.code === 'Slash') {\n                setShowInput(true);\n            }*/\n            if (e.code === 'KeyC' && e.shiftKey) {\n                setShowInput(true);\n            }\n\n            if (e.code === 'Escape') {\n                setShowInput(false);\n                setInputValue('');\n                cursor.sendMessage('');\n            }\n        };\n\n        document.addEventListener('keydown', keydown);\n\n        return () => {\n            document.removeEventListener('keydown', keydown);\n        };\n    }, []);\n\n    return useMemo(\n        () => (\n            <div className=\"online-cursor-wrapper__cursor\" ref={refContainer}>\n                <CursorIcon color={cursor.color} />\n\n                <div\n                    className=\"online-cursor-wrapper__tail-box\"\n                    style={{\n                        borderRadius: showInput ? 35 : 15,\n                        borderTopLeftRadius: showInput ? 10 : 15,\n                        backgroundColor: `${cursor.color}`,\n                    }}\n                >\n                    <div className=\"online-cursor-wrapper__user\">\n                        {cursor.avatar && (\n                            <img\n                                className=\"online-cursor-wrapper__avatar\"\n                                src={cursor.avatar}\n                                alt=\"avatar\"\n                            />\n                        )}\n                        {cursor.name && (\n                            <span className=\"online-cursor-wrapper__name\">\n                                {cursor.name}\n                            </span>\n                        )}\n                        <Latency cursor={cursor} showLatency={showLatency} />\n                    </div>\n                    <div\n                        style={{\n                            height: '1px',\n                            width: '100%',\n                            visibility: 'hidden',\n                            background: 'transparent',\n                        }}\n                    ></div>\n                    {showInput && (\n                        <div className=\"online-cursor-wrapper__input-box\">\n                            <span>{inputValue}</span>\n                            <input\n                                autoFocus\n                                placeholder=\"Say something\"\n                                value={inputValue}\n                                onChange={onChangeInput}\n                            />\n                        </div>\n                    )}\n                </div>\n            </div>\n        ),\n        [showInput, inputValue, showLatency]\n    );\n};\n\nexport default MeCursor;\n","import React, { memo } from 'react';\nimport useOnlineCursor from './hooks/useOnlineCursor';\nimport OtherCursors from './OtherCursors';\nimport MeCursor from './MeCursor';\nimport './styles/dracula.css';\n\nconst CursorChat = ({\n    presenceURL,\n    presenceAuthEndpoint,\n    room,\n    showLatency = false,\n    name,\n    avatar,\n    colors = ['#604CFF', '#FF0BC6', '#00C0ED', '#FFAB24', '#F52768'],\n}: {\n    presenceURL: string;\n    presenceAuthEndpoint: string;\n    room?: string;\n    showLatency?: boolean;\n    name?: string;\n    avatar?: string;\n    colors?: Array<string>;\n}): JSX.Element | null => {\n    const { me, others } = useOnlineCursor({\n        presenceURL,\n        presenceAuthEndpoint,\n        room,\n        name,\n        avatar,\n        color: `${colors[Math.floor(Math.random() * colors.length)]}`,\n    });\n\n    if (!me) {\n        return null;\n    }\n\n    return (\n        <div className=\"online-cursor-wrapper\">\n            <OtherCursors others={others} showLatency={showLatency} />\n            <MeCursor cursor={me} showLatency={showLatency} />\n        </div>\n    );\n};\n\nexport default memo(CursorChat);\n"],"names":["Cursor","id","x","y","name","avatar","color","this","move","onMove","_mousePosition","onGetLatency","_data","subscribeLatency","yomo","on$","subscribe","data","_this","getViewportSize","window","onresize","width","innerWidth","document","documentElement","clientWidth","body","height","innerHeight","clientHeight","Me","subscription","subscribeMousemove","goOnline","online","onlineSubscription","subscribeOnline","mousePositionSubscription","subscribeMousePosition","latencySubscription","visibilitySubscription","subscribeVisibility","add","goOffline","send","unsubscribe","_context","Promise","resolve","setTimeout","sendMessage","message","_this2","fromEvent","event","clientX","clientY","_Cursor","_this3","mouseX","mouseY","pipe","map","scaleX","scaleY","_this4","hidden","_this5","Other","subscribeMovement","textMessageSubscription","subscribeTextMessage","leaveSubscription","subscribeLeave","enterSubscription","subscribeEnter","onTextMessage","_message","filter","onLeave","onEnter","Error","useOnlineCursor","presenceURL","presenceAuthEndpoint","room","useState","me","setMe","Map","otherMap","setOtherMap","useEffect","ID","replace","c","r","Math","random","toString","Presence","auth","type","endpoint","on","toRoom","old","has","cursorMap","other","set","get","delete","cleanup","close","addEventListener","removeEventListener","others","forEach","value","push","CursorIcon","useMemo","React","viewBox","fill","xmlns","d","Latency","cursor","showLatency","meshId","latency","latencyData","setLatencyData","_","className","useRenderPosition","refContainer","finaliRefContainer","useRef","renderPosition","position","current","style","setProperty","OtherCursor","renderOpacity","opacity","String","useRenderOpacity","msg","setMsg","ref","borderRadius","borderTopLeftRadius","backgroundColor","src","alt","visibility","background","OthersCursors","item","key","MeCursor","showInput","setShowInput","inputValue","setInputValue","onChangeInput","useCallback","e","target","keydown","code","shiftKey","autoFocus","placeholder","onChange","memo","colors","floor","length","OtherCursors"],"mappings":"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"}